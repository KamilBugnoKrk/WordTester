@* Copyright (C) 2021  Kamil Bugno
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.*@

@inject ILearningApi learningApi

<div class="open-container">
    <h2>@Question</h2>
    @if (RepetitionType == RepetitionType.FromOriginalToTranslatedOpen)
    {
        <p>[Pronunciation]</p>
    }
    else
    {
        <p></p>
    }

    <input @bind="userResponse" autofocus placeholder="@GetPlaceholder()" />
    <button @onclick="@SendResponse" class="btn btn-lg btn-primary">Next</button>
</div>

@code {
    [Parameter]
    public string Question { get; set; }
    [Parameter]
    public RepetitionType RepetitionType { get; set; }
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private string userResponse = string.Empty;


    private async Task SendResponse()
    {
        await OnClick.InvokeAsync(userResponse);
        userResponse = string.Empty;
    }

    private string GetPlaceholder()
    {
        if (RepetitionType == RepetitionType.FromOriginalToTranslatedOpen ||
           RepetitionType == RepetitionType.FromExampleToTranslatedOpen)
        {
            return "Translated word";
        }
        else if (RepetitionType == RepetitionType.FromDefinitionToOriginalOpen ||
            RepetitionType == RepetitionType.FromTranslatedToOriginalOpen)
        {
            return "Original word";
        }
        return string.Empty;
    }
}
