@* Copyright (C) 2021  Kamil Bugno
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses/.*@

@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@inject ICourseApi courseApi

<div class="grid-container">
    <div class="details">
        <div class="info">
            <h2>Hi @userName!</h2>
            <h5>We have stats for you:</h5>
            <p>You have created @courses.Count() courses</p>
            <p>
                All your courses contain @courses.Where(c => !c.IsVisibleForEveryone).Sum(c => c.NumberOfWords)
                words
            </p>
        </div>
    </div>
    <div class="main">
        @if (!isLoading)
        {
            @foreach (var course in courses)
            {
                <div class="course-tile course-tile-content">
                    <h2>@course.Name</h2>
                    <p>@course.Description</p>
                    <div @onclick=@(() => NagivateToLearning()) class="actions">
                        <div>
                            <i class="fas fa-graduation-cap"></i>
                            <p>Learn</p>
                        </div>
                        @if (!course.IsVisibleForEveryone)
                        {
                            <div @onclick=@(() => NagivateToDetails(course.Id))>
                                <i class="fas fa-edit"></i>
                                <p>Edit</p>
                            </div>
                        }
                    </div>
                </div>
            }
            <div class="course-tile add-new" @onclick=@(() => NagivateToDetails())>
                <p>Add a new course</p>
                <img class="image-add-new" src="/assets/add.svg" />
            </div>
        }
        else
        {
            <div class="course-tile add-new")>
                <p>Loading...</p>
            </div>
        }
    </div>
</div>


@code {
    private IEnumerable<CourseDto> courses = new List<CourseDto>();
    private string userName;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        courses = await courseApi.GetMyCourses();
        isLoading = false;
        userName = await authStateProvider.GetUserName();
    }

    void NagivateToDetails(int courseId = 0)
    {
        if (courseId == 0)
            navigationManager.NavigateTo("/details");
        else
            navigationManager.NavigateTo("/details/" + courseId);

    }

    void NagivateToLearning()
    {
        navigationManager.NavigateTo("/learning");
    }
}
